/*
 * MainPanel.java
 *
 * Created on August 21, 2006, 8:21 PM
 */

package ab5k;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.GradientPaint;
import java.awt.Point;
import javax.swing.Action;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import org.jdesktop.swingx.JXButton;
import org.jdesktop.swingx.JXPanel;
import org.jdesktop.swingx.painter.CompoundPainter;
import org.jdesktop.swingx.painter.MattePainter;
import org.jdesktop.swingx.painter.Painter;
import org.jdesktop.swingx.painter.PinstripePainter;

/**
 *
 * @author  joshy
 */
public class MainPanel extends javax.swing.JPanel {
    public enum DockingSide { Left, Right };
    private DockingSide side = DockingSide.Right;
    public Main main;

    private boolean microdocking = false;
    
    /** Creates new form MainPanel */
    public MainPanel() {
        this(null);
    }
    
    public MainPanel(Main main) {
        setMain(main);
        initComponents();
        
        
        logoButton.setText("");
        logoButton.setIcon(new ImageIcon(getClass().getResource("/images/logo 1.png")));
        
        JXButton logo = (JXButton) logoButton;
        logo.setContentAreaFilled(false);
        GradientPaint grad = new GradientPaint(new Point(0,0), Color.GRAY, new Point(10,0), Color.WHITE);
        MattePainter bg = new MattePainter(grad);
        bg.setSnapPaint(true);
        
        Painter comp = logo.getForegroundPainter();
        CompoundPainter cp = new CompoundPainter(bg,comp);
        logo.setForegroundPainter(cp);
        miniModePanel.setLayout(new BoxLayout(miniModePanel,BoxLayout.Y_AXIS));
        
        stripButton.addActionListener(main.getCollapseWindowAction());
    }
    
    public void showGlasspane() {
        // first test of a glasspane
        JXPanel panel = new JXPanel();
        panel.setOpaque(false);
        panel.setBackgroundPainter(new PinstripePainter(Color.RED,45));
        Dimension size = new Dimension(500,500);
        panel.setSize(size);
        panel.setLocation(200,200);
        desktop.add(panel);
    }
    
    public void setMain(Main main) {
        this.main = main;
    }
    
    public Action getPreferencesAction() {
        return main.getPreferencesAction();
    }
    
    public Action getShowManageDialogAction() {
        return main.getShowManageDialogAction();
    }
    
    public Action getQuitAction() {
        return main.getQuitAction();
    }
    
    public Action getCollapseWindowAction() {
        return main.getCollapseWindowAction();
    }
    
    public DockingSide getDockingSide() {
        return this.side;
    }
    
    public void setDockingSide(DockingSide side) {
        this.side = side;
        this.remove(dockPanel);
        if(side == DockingSide.Left) {
            this.add(dockPanel,"East");
        }
        if(side == DockingSide.Right) {
            this.add(dockPanel,"West");
        }
        this.validate();
        dockPanel.validate();
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        desktop = new CustomDesktopPane();
        dockPanel = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        collapseButton = new javax.swing.JButton();
        logoButton = new JXButton();
        jButton1 = new javax.swing.JButton();
        stripButton = new javax.swing.JButton();
        miniModePanel = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        add(desktop, java.awt.BorderLayout.CENTER);

        dockPanel.setLayout(new java.awt.GridBagLayout());

        dockPanel.setPreferredSize(new java.awt.Dimension(100, 500));
        jButton3.setAction(getShowManageDialogAction());
        jButton3.setText("Manage");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        dockPanel.add(jButton3, gridBagConstraints);

        collapseButton.setAction(getCollapseWindowAction());
        collapseButton.setText("<");
        collapseButton.setOpaque(false);
        collapseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collapseButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        dockPanel.add(collapseButton, gridBagConstraints);

        logoButton.setAction(getCollapseWindowAction());
        logoButton.setText("Logo");
        logoButton.setBorder(null);
        logoButton.setBorderPainted(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        dockPanel.add(logoButton, gridBagConstraints);

        jButton1.setAction(getQuitAction());
        jButton1.setText("quit");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        dockPanel.add(jButton1, gridBagConstraints);

        stripButton.setBorder(null);
        stripButton.setBorderPainted(false);
        stripButton.setMinimumSize(new java.awt.Dimension(10, 10));
        stripButton.setPreferredSize(new java.awt.Dimension(10, 10));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        dockPanel.add(stripButton, gridBagConstraints);

        miniModePanel.setLayout(new java.awt.GridLayout(20, 1));

        miniModePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 10.0;
        dockPanel.add(miniModePanel, gridBagConstraints);

        add(dockPanel, java.awt.BorderLayout.WEST);

    }// </editor-fold>//GEN-END:initComponents

    private void collapseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collapseButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_collapseButtonActionPerformed
    
    public int getDockWidth() {
        return dockPanel.getWidth();
    }
    
    public JPanel getDockPanel() {
        return miniModePanel;
    }

    public boolean isMicrodocking() {
        return microdocking;
    }
    public void setMicrodocking(boolean microdocking) {
        this.microdocking = microdocking;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton collapseButton;
    public javax.swing.JDesktopPane desktop;
    private javax.swing.JPanel dockPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton logoButton;
    private javax.swing.JPanel miniModePanel;
    private javax.swing.JButton stripButton;
    // End of variables declaration//GEN-END:variables
    
}
