/*
 * WeatherWatcher.java
 *
 * Created on June 5, 2006, 4:58 PM
 */

package weatherdesklet;

import java.awt.Color;
import java.awt.Insets;
import java.util.HashMap;
import java.util.Map;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import org.jdesktop.swingx.JXPanel;
import org.jdesktop.swingx.painter.CompoundPainter;
import org.jdesktop.swingx.painter.RectanglePainter;
import org.jdesktop.swingx.painter.URLPainter;
import org.joshy.util.u;
import org.joshy.weather.Weather;
import org.joshy.weather.WeatherFactory;

/**
 *
 * @author  joshy
 */
public class WeatherWatcher extends JXPanel {
    WeatherFactory fact = WeatherFactory.newInstance();
    private Weather weather;
    private Map<Integer,Icon> icons;
    private Desklet desklet;
    
    
    /** Creates new form WeatherWatcher */
    public WeatherWatcher(Desklet desklet) {
        this.desklet = desklet;
        icons = new HashMap<Integer,Icon>();
        initComponents();
        
        icons.put(Weather.CLEAR,new ImageIcon(getClass().getResource("images/weather-clear.png")));
        icons.put(Weather.CLOUDY,new ImageIcon(getClass().getResource("images/weather-overcast.png")));
        icons.put(Weather.LIGHTNING,new ImageIcon(getClass().getResource("images/weather-storm.png")));
        icons.put(Weather.RAIN,new ImageIcon(getClass().getResource("images/weather-showers.png")));
        icons.put(Weather.SNOW,new ImageIcon(getClass().getResource("images/weather-snow.png")));
        icons.put(Weather.SUNNY,new ImageIcon(getClass().getResource("images/weather-clear.png")));
        icons.put(Weather.UNKNOWN,new ImageIcon(getClass().getResource("images/weather-severe-alert.png")));
        this.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
        RectanglePainter rp = new RectanglePainter(0,0,0,0, 25,25, true, Color.GREEN, 1.0f, Color.GREEN.darker());
        rp.setBorderWidth(5f);
        rp.setInsets(new Insets(1,1,1,1));
        this.setBackgroundPainter(new CompoundPainter(rp));
        /*
        URL painter = this.getClass().getResource("WeatherWatcher.painter");
        URL painter2 = this.getClass().getResource("WeatherWatcher.temp.painter");
        try {
            this.setBackgroundPainter(PainterUtil.loadPainter(painter));
            ((JXLabel)temp).setForegroundPainter(PainterUtil.loadPainter(painter2));
        } catch (IOException ex) {
            ex.printStackTrace();
        }
         */
        //this.setBackgroundPainter(new URLPainter(WeatherWatcher.class,"WeatherWatcher.painter"));
        /*
        try{
            setWeather(fact.getWeather("KATL"));
        }catch(Exception e){
            e.printStackTrace();
        }*/
    }
    
    public Weather getWeather() {
        return weather;
    }
    
    public void setWeather(Weather weather) {
        this.weather = weather;
        
        description.setText(getWeather().getLocation());
        temp.setText(getWeather().getTempF()+"");
        type.setText(getWeather().getWeather());
        weatherIcon.setText("");
        weatherIcon.setIcon(icons.get(getWeather().getType()));
    }
    
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        description = new javax.swing.JLabel();
        type = new javax.swing.JLabel();
        setupButton = new javax.swing.JButton();
        temp = new org.jdesktop.swingx.JXLabel();
        weatherIcon = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 255, 255));
        description.setForeground(new java.awt.Color(51, 51, 51));
        description.setText("this is a really long description of the location");

        type.setForeground(new java.awt.Color(51, 51, 51));
        type.setText("jLabel4");

        setupButton.setText("Setup");
        setupButton.setContentAreaFilled(false);
        setupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setupButtonActionPerformed(evt);
            }
        });

        temp.setBackgroundPainter(null);
        temp.setText("i");
        temp.setFont(new java.awt.Font("Lucida Grande", 0, 60));

        weatherIcon.setText("Weather Icon");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(description, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 215, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(setupButton))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(weatherIcon)
                            .add(type))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(temp, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(weatherIcon)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(type))
                    .add(temp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(setupButton)
                    .add(description))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void setupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setupButtonActionPerformed
        getWeather().getStationID();
        WeatherDialog dia = new WeatherDialog((JFrame)SwingUtilities.windowForComponent(this),true);
        dia.setVisible(true);
        u.p("selected station = " + dia.selectedStation);
        try {
            setWeather(fact.getWeather(dia.selectedStation));
            setSelectedStation(dia.selectedStation);
        } catch (Exception ex) {
            u.p(ex);
        }
        
    }//GEN-LAST:event_setupButtonActionPerformed

    private void setSelectedStation(String selectedStation) {
        desklet.setStationID(selectedStation);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel description;
    private javax.swing.JButton setupButton;
    private org.jdesktop.swingx.JXLabel temp;
    private javax.swing.JLabel type;
    private javax.swing.JLabel weatherIcon;
    // End of variables declaration//GEN-END:variables
    
}
